name: Deploying Sensing Local Billing Application

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        working-directory: ./server
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Node.js dependencies
        working-directory: ./client
        run: |
          npm install

      - name: Build React app
        working-directory: ./client
        env:
          CI: false
        run: |
          npm run build

      # Print environment variables (sensitive values should not be displayed)
      - name: Print environment variables
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}"
          echo "DB_USER=${{ secrets.DB_USER }}"
          echo "DB_NAME=${{ secrets.DB_NAME }}"
          echo "DB_PORT=${{ secrets.DB_PORT }}"

      # Set up the SSH key
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY}}
          SERVER_IP: ${{ secrets.SERVER_IP}}
          USERNAME: ${{ secrets.USERNAME}}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PORT: ${{ secrets.DB_PORT }}
        run: |
          # Transfer React build files
          scp -i ~/.ssh/id_rsa -r ./client/build/ $USERNAME@$SERVER_IP:/home/ec2-user/testBillingEC2Deployment/client/

          # Transfer Flask application code
          scp -i ~/.ssh/id_rsa -r ./server/ $USERNAME@$SERVER_IP:/home/ec2-user/testBillingEC2Deployment/server/

          # SSH into the server and perform actions
          ssh -i ~/.ssh/id_rsa $USERNAME@$SERVER_IP << 'EOF'
            # Navigate to Flask app directory and restart the service
            cd /home/ec2-user/testBillingEC2Deployment
            git pull origin main 
            sudo systemctl restart testBillingEC2Deployment
            
            # Export environment variables for database connection
            export DB_HOST=${{ secrets.DB_HOST }}
            export DB_USER=${{ secrets.DB_USER }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export DB_NAME=${{ secrets.DB_NAME }}
            export DB_PORT=${{ secrets.DB_PORT }}
            
            # Apply any pending database migrations (if using Flask-Migrate or equivalent)
            cd /home/ec2-user/testBillingEC2Deployment/server
            flask db upgrade  # Adjust this if you are using a different command for migrations
            
            # Ensure React build files are served by Nginx
            sudo systemctl reload nginx
          EOF
